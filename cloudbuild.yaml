steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'eu.gcr.io/${PROJECT_ID}/${_IMAGE_NAME}', '.']
  dir: /workspace/app

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'eu.gcr.io/${PROJECT_ID}/${_IMAGE_NAME}']
  dir: /workspace/app

- name: "gcr.io/cloud-builders/gsutil"
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     gsutil cp gs://$${ML_MODELS_BUCKET}/clnn-news/*latest ${_MODEL_ARCHIVE}
  dir: /workspace
  env:
  - 'ML_MODELS_BUCKET=${_ANALYTICS_PROJECT}-models'

- name: "gcr.io/cloud-builders/gsutil"
  entrypoint: 'sh'
  dir: /workspace
  args:
  - '-c'
  - |
    mkdir checkpoint && mv ${_MODEL_ARCHIVE} checkpoint && cd checkpoint && unzip ${_MODEL_ARCHIVE} && rm ${_MODEL_ARCHIVE}

- name: 'eu.gcr.io/${PROJECT_ID}/${_IMAGE_NAME}'
  entrypoint: sh
  args: ['-c', 'python3 generate.py']
  dir: /workspace/app
  env:
  - 'ML_ARTICLES_BUCKET=${PROJECT_ID}-generated-articles'
  - 'TEMPERATURE=${_TEMPERATURE}'

- id: 'Terraform init'
  name: 'hashicorp/terraform'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
     terraform init \
       -backend-config="bucket=${PROJECT_ID}-terraform-state" \
       -backend-config="prefix=${REPO_NAME}"
  dir: /workspace/infra

- id: 'Terraform plan'
  name: 'hashicorp/terraform'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
     terraform plan
  dir: /workspace/infra
  env:
  - "GOOGLE_PROJECT=${PROJECT_ID}"
  - "TF_VAR_analytics_project=${_ANALYTICS_PROJECT}"
  - "TF_VAR_region=${_REGION}"

- id: 'Terraform apply'
  name: 'hashicorp/terraform'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
     terraform apply -auto-approve
  dir: /workspace/infra
  env:
  - "GOOGLE_PROJECT=${PROJECT_ID}"
  - "TF_VAR_analytics_project=${_ANALYTICS_PROJECT}"
  - "TF_VAR_region=${_REGION}"

substitutions:
  _MODEL_ARCHIVE: clnn-model.zip
  _IMAGE_NAME: generate-climate-news
  _TEMPERATURE: '1.0'
